name: Test workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Netmaker version'
        required: true
  workflow_call:
    inputs:
      newversion:
        required: true
        type: string
      data:
        required: true
        type: string
      update:
        required: true
        type: boolean
        

      
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.echo.outputs.tag }}
      version: ${{ steps.echo.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Get Version Number
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            VERSION=${{ github.event.inputs.version }}
          else
            VERSION=$(curl -fsSL https://api.github.com/repos/gravitl/netmaker/tags | grep 'name' | head -1 | cut -d'"' -f4)
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          #remove everything but digits and . from version for packaging purposes
          PACKAGE_VERSION=$(echo ${VERSION} | tr -cd '[:digit:].')
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
      - name: Echo
        id: echo
        run: |
          echo "passed version" ${{ github.event.inputs.version }}
          echo "data" ${{ github.event.inputs.other_data }}
          echo "bool" ${{ github.event.inputs.some_bool }}
          echo "version" $NEWVERSION ":" ${{ inputs.newversion }}
          echo "data" $DATA  ":" ${{ inputs.data }}
          echo "bool" $UPDATE ":" ${{ inputs.update }}
          echo ${{ env.VERSION }}
          echo "::set-output name=tag::${{ env.VERSION }}"
          echo ${{ env.PACKAGE_VERSION }}
          echo "::set-output name=version::${{ env.PACKAGE_VERSION }}"

